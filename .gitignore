# Operating System Files
.DS_Store
Thumbs.db
ehthumbs.db

# IDE - Visual Studio Code
.vscode/*
!.vscode/settings.json
!.vscode/extensions.json
!.vscode/launch.json
!.vscode/tasks.json
.history/

# Node.js / pnpm / Vite
node_modules/
dist/
src-web/dist/ # 前端构建输出目录 (如果Vite配置如此)
coverage/
.npm/
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*
lerna-debug.log*
report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json
pid.[0-9]*.log
npm- μπορούμενα-*.tgz
*.pnp.*
.pnp.js
.pnp.loader.mjs
.yarn/install-state.gz

# Python / uv / venv
__pycache__/
*.py[cod]
*$py.class
.Python
build/
develop-eggs/
dist/ # Python的构建输出目录，如果与前端的dist冲突，需要更具体
eggs/
sdist/
var/
*.egg-info/
.installed.cfg
*.egg
MANIFEST
*.manifest
*.spec
pip-log.txt
pip-delete-this-directory.txt
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.log
.mypy_cache/
.pytest_cache/
.ruff_cache/
.hypothesis/
celerybeat-schedule
*.pid
# Virtual Environments
.venv/
venv/
ENV/
env/
env.bak/
venv.bak/
# Environment Variables
.env
.env.*
!.env.example # 如果您有示例环境变量文件

# Rust / Cargo / Tauri
# Cargo.lock should usually be committed for binary projects like Tauri apps
# to ensure reproducible builds. If it's a library, it might be ignored.
# For Tauri, let's assume we commit Cargo.lock for `src-tauri`.
target/ # 主项目的target目录 (如果在根目录生成)
src-tauri/target/ # Tauri Rust核心的编译输出
# src-tauri/Cargo.lock # 通常Tauri项目会提交这个

# Tauri specific build artifacts (macOS)
src-tauri/bundle/
*.app/
*.dmg

# Tauri specific build artifacts (Windows)
# src-tauri/bundle/msi/
# src-tauri/bundle/nsis/
# *.msi
# *.exe

# Tauri specific build artifacts (Linux)
# src-tauri/bundle/appimage/
# src-tauri/bundle/deb/
# *.AppImage
# *.deb

# Other
secrets/
*.bak
*.swp
*.swo